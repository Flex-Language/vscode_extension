{
  "If Statement": {
    "prefix": ["if", "lw"],
    "body": [
      "lw ${1:condition} {",
      "\t$0",
      "}"
    ],
    "description": "If statement"
  },
  "If-Else Statement": {
    "prefix": ["ifelse", "lwgher"],
    "body": [
      "lw ${1:condition} {",
      "\t$2",
      "} gher {",
      "\t$0",
      "}"
    ],
    "description": "If-else statement"
  },
  "If-Elif-Else Statement": {
    "prefix": ["ifelifelse", "lwaw"],
    "body": [
      "lw ${1:condition1} {",
      "\t$2",
      "} aw ${3:condition2} {",
      "\t$4",
      "} gher {",
      "\t$0",
      "}"
    ],
    "description": "If-elif-else statement"
  },
  "While Loop": {
    "prefix": ["while", "talama"],
    "body": [
      "talama ${1:condition} {",
      "\t$0",
      "}"
    ],
    "description": "While loop"
  },
  "For Loop": {
    "prefix": ["for", "karr"],
    "body": [
      "karr ${1:i}=${2:start} l7d ${3:end} {",
      "\t$0",
      "}"
    ],
    "description": "For loop"
  },
  "Function Definition": {
    "prefix": ["function", "sndo2"],
    "body": [
      "sndo2 ${1:name}(${2:params}) {",
      "\t$3",
      "\trg3 ${4:result}",
      "}"
    ],
    "description": "Function definition"
  },
  "Print Statement": {
    "prefix": ["print", "etb3"],
    "body": [
      "etb3(\"${1:message}\")"
    ],
    "description": "Print statement"
  },
  "Formatted Print": {
    "prefix": ["fprint", "formatprint"],
    "body": [
      "etb3(\"${1:message} {${2:variable}}\")"
    ],
    "description": "Formatted print statement"
  },
  "Input Statement": {
    "prefix": ["input", "da5l"],
    "body": [
      "${1:variable} = da5l()"
    ],
    "description": "Input statement"
  },
  "Variable Declaration": {
    "prefix": ["var", "variable"],
    "body": [
      "${1|rakm,kasr,so2al,klma,dorg,int,float,bool,string,list|} ${2:name} = ${3:value}"
    ],
    "description": "Variable declaration"
  },
  "Import Statement": {
    "prefix": ["import", "geep"],
    "body": [
      "geep \"${1:path}\""
    ],
    "description": "Import statement"
  },
  "List Declaration": {
    "prefix": ["list", "dorg"],
    "body": [
      "dorg ${1:name} = [${2:elements}]"
    ],
    "description": "List declaration"
  },
  "C-style For Loop": {
    "prefix": ["cfor", "forloop"],
    "body": [
      "for (int ${1:i}=0; ${1:i} < ${2:limit}; ${1:i}++) {",
      "\t$0",
      "}"
    ],
    "description": "C-style for loop"
  },
  "English If Statement": {
    "prefix": ["engif", "ifstatement"],
    "body": [
      "if (${1:condition}) {",
      "\t$0",
      "}"
    ],
    "description": "English style if statement"
  },
  "English While Loop": {
    "prefix": ["engwhile", "whileloop"],
    "body": [
      "while (${1:condition}) {",
      "\t$0",
      "}"
    ],
    "description": "English style while loop"
  },
  "English Function": {
    "prefix": ["engfun", "function"],
    "body": [
      "function ${1:name}(${2:params}) {",
      "\t$3",
      "\treturn ${4:result}",
      "}"
    ],
    "description": "English style function"
  }
} 